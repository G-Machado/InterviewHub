{"ast":null,"code":"var _jsxFileName = \"/Users/machadogomes/Documents/InterviewHub/question_hub/src/Components/ExamTimer.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExamTimer() {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const user = useSelector(state => state.userData);\n  const startTime = user.examStartTime; // Example: \"30/01/2023-17:35:04\"\n\n  const startHour = parseInt(startTime.split(\"-\")[1].split(\":\")[0]);\n  const startMinute = parseInt(startTime.split(\"-\")[1].split(\":\")[1]);\n  const startSecond = parseInt(startTime.split(\"-\")[1].split(\":\")[2]);\n  const startDay = parseInt(startTime.split(\"-\")[0].split(\"/\")[0]);\n  const deltaSeconds = date.getSeconds() < startSecond ? date.getSeconds() : date.getSeconds() - startSecond;\n  const deltaMinutes = date.getMinutes() < startMinute ? date.getMinutes() : date.getMinutes() - startMinute;\n  const deltaHours = date.getHours() < startHour ? date.getHours() : date.getHours() - startHour;\n  const deltaDays = date.getDate() < startDay ? date.getDate() : date.getDate() - startDay;\n  const deltaTime = deltaSeconds + deltaMinutes * 60 + deltaHours * 360;\n  let timeSpent = `${parseInt(deltaTime / 360)}:${deltaMinutes}:${deltaSeconds}`;\n  const dateTime = date.toLocaleTimeString();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: deltaHours\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n}\n_s(ExamTimer, \"EFELX1dg8jpKbOUphY/2O6RCjOI=\", false, function () {\n  return [useSelector];\n});\n_c = ExamTimer;\nexport default ExamTimer;\nvar _c;\n$RefreshReg$(_c, \"ExamTimer\");","map":{"version":3,"names":["useSelector","useEffect","useState","ExamTimer","date","setDate","Date","user","state","userData","startTime","examStartTime","startHour","parseInt","split","startMinute","startSecond","startDay","deltaSeconds","getSeconds","deltaMinutes","getMinutes","deltaHours","getHours","deltaDays","getDate","deltaTime","timeSpent","dateTime","toLocaleTimeString","interval","setInterval","clearInterval"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/Components/ExamTimer.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nfunction ExamTimer()\n{\n    const [date, setDate] = useState(new Date());\n   \n    const user = useSelector(state => state.userData);\n    const startTime = user.examStartTime; // Example: \"30/01/2023-17:35:04\"\n    \n    const startHour = parseInt(startTime.split(\"-\")[1].split(\":\")[0]);\n    const startMinute = parseInt(startTime.split(\"-\")[1].split(\":\")[1]);\n    const startSecond = parseInt(startTime.split(\"-\")[1].split(\":\")[2]);\n    const startDay = parseInt(startTime.split(\"-\")[0].split(\"/\")[0]);\n\n    const deltaSeconds = date.getSeconds() < startSecond ? date.getSeconds() : date.getSeconds() - startSecond;\n    const deltaMinutes = date.getMinutes() < startMinute ? date.getMinutes() : date.getMinutes() - startMinute;\n    const deltaHours = date.getHours() < startHour ? date.getHours() : date.getHours() - startHour;\n    const deltaDays =  date.getDate() < startDay ? date.getDate() : date.getDate() - startDay;\n\n    const deltaTime = deltaSeconds + deltaMinutes * 60 + deltaHours * 360;\n    let timeSpent = `${parseInt(deltaTime/360)}:${deltaMinutes}:${deltaSeconds}`;\n    const dateTime =date.toLocaleTimeString();\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setDate(new Date());\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return <div>{deltaHours}</div>\n}\n\nexport default ExamTimer;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,SAASC,SAAS,GAClB;EAAA;EACI,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,IAAII,IAAI,EAAE,CAAC;EAE5C,MAAMC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAAC;EACjD,MAAMC,SAAS,GAAGH,IAAI,CAACI,aAAa,CAAC,CAAC;;EAEtC,MAAMC,SAAS,GAAGC,QAAQ,CAACH,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,MAAMC,WAAW,GAAGF,QAAQ,CAACH,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACnE,MAAME,WAAW,GAAGH,QAAQ,CAACH,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACnE,MAAMG,QAAQ,GAAGJ,QAAQ,CAACH,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAEhE,MAAMI,YAAY,GAAGd,IAAI,CAACe,UAAU,EAAE,GAAGH,WAAW,GAAGZ,IAAI,CAACe,UAAU,EAAE,GAAGf,IAAI,CAACe,UAAU,EAAE,GAAGH,WAAW;EAC1G,MAAMI,YAAY,GAAGhB,IAAI,CAACiB,UAAU,EAAE,GAAGN,WAAW,GAAGX,IAAI,CAACiB,UAAU,EAAE,GAAGjB,IAAI,CAACiB,UAAU,EAAE,GAAGN,WAAW;EAC1G,MAAMO,UAAU,GAAGlB,IAAI,CAACmB,QAAQ,EAAE,GAAGX,SAAS,GAAGR,IAAI,CAACmB,QAAQ,EAAE,GAAGnB,IAAI,CAACmB,QAAQ,EAAE,GAAGX,SAAS;EAC9F,MAAMY,SAAS,GAAIpB,IAAI,CAACqB,OAAO,EAAE,GAAGR,QAAQ,GAAGb,IAAI,CAACqB,OAAO,EAAE,GAAGrB,IAAI,CAACqB,OAAO,EAAE,GAAGR,QAAQ;EAEzF,MAAMS,SAAS,GAAGR,YAAY,GAAGE,YAAY,GAAG,EAAE,GAAGE,UAAU,GAAG,GAAG;EACrE,IAAIK,SAAS,GAAI,GAAEd,QAAQ,CAACa,SAAS,GAAC,GAAG,CAAE,IAAGN,YAAa,IAAGF,YAAa,EAAC;EAC5E,MAAMU,QAAQ,GAAExB,IAAI,CAACyB,kBAAkB,EAAE;EAEzC5B,SAAS,CAAC,MAAM;IACZ,MAAM6B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B1B,OAAO,CAAC,IAAIC,IAAI,EAAE,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM0B,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO;IAAA,UAAMR;EAAU;IAAA;IAAA;IAAA;EAAA,QAAO;AAClC;AAAC,GA9BQnB,SAAS;EAAA,QAIDH,WAAW;AAAA;AAAA,KAJnBG,SAAS;AAgClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}