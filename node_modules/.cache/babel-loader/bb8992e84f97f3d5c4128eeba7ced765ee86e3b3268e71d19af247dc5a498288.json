{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { changeUser } from \"../store\";\nfunction useLoadUser(data) {\n  _s();\n  const dispatch = useDispatch();\n\n  // Dispatch user data\n  dispatch(changeUser(data));\n\n  // Filter and dispatch loaded user questions\n  let filteredQuestions = [];\n  useEffect(() => {\n    if (!data) return;\n\n    // console.log(data);\n    data.map(question => {\n      user.questionsId.map(id => {\n        if (id == question.id) {\n          filteredQuestions.push(question);\n        }\n      });\n    });\n    dispatch(loadQuestionsData(filteredQuestions));\n    if (!user.startedExam) {\n      const newDate = new Date();\n      const startTime = `${newDate.getDate()}/${newDate.getMonth() + 1}/${newDate.getFullYear()}-${newDate.getHours()}:${newDate.getMinutes()}:${newDate.getSeconds()}`;\n      dispatch(setUserField({\n        key: \"startedExam\",\n        value: true\n      }));\n      dispatch(setUserField({\n        key: \"examStartTime\",\n        value: startTime\n      }));\n    }\n    return;\n  }, [data]);\n}\n_s(useLoadUser, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\nexport default useLoadUser;","map":{"version":3,"names":["useDispatch","changeUser","useLoadUser","data","dispatch","filteredQuestions","useEffect","map","question","user","questionsId","id","push","loadQuestionsData","startedExam","newDate","Date","startTime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","setUserField","key","value"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/Hooks/useLoadUser.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { changeUser } from \"../store\";\n\nfunction useLoadUser(data)\n{\n    const dispatch = useDispatch();\n\n    // Dispatch user data\n    dispatch(changeUser(data));\n\n    // Filter and dispatch loaded user questions\n    let filteredQuestions = [];\n    useEffect(() => {\n        if(!data)return;\n\n        // console.log(data);\n        data.map((question) =>\n        {\n            user.questionsId.map((id) => {\n                if(id == question.id) \n                {\n                    filteredQuestions.push(question);\n                }\n            });\n        })\n\n        dispatch(loadQuestionsData(filteredQuestions));\n        \n        if(!user.startedExam)\n        {\n            const newDate = new Date();\n            const startTime = `${newDate.getDate()}/${newDate.getMonth()+1}/${newDate.getFullYear()}-${newDate.getHours()}:${newDate.getMinutes()}:${newDate.getSeconds()}`;\n            dispatch(setUserField({key:\"startedExam\", value: true}));\n            dispatch(setUserField({key:\"examStartTime\", value: startTime}));\n        }\n        return;\n    }, [data]);    \n}\n\nexport default useLoadUser;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,UAAU;AAErC,SAASC,WAAW,CAACC,IAAI,EACzB;EAAA;EACI,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;;EAE9B;EACAI,QAAQ,CAACH,UAAU,CAACE,IAAI,CAAC,CAAC;;EAE1B;EACA,IAAIE,iBAAiB,GAAG,EAAE;EAC1BC,SAAS,CAAC,MAAM;IACZ,IAAG,CAACH,IAAI,EAAC;;IAET;IACAA,IAAI,CAACI,GAAG,CAAEC,QAAQ,IAClB;MACIC,IAAI,CAACC,WAAW,CAACH,GAAG,CAAEI,EAAE,IAAK;QACzB,IAAGA,EAAE,IAAIH,QAAQ,CAACG,EAAE,EACpB;UACIN,iBAAiB,CAACO,IAAI,CAACJ,QAAQ,CAAC;QACpC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;IAEFJ,QAAQ,CAACS,iBAAiB,CAACR,iBAAiB,CAAC,CAAC;IAE9C,IAAG,CAACI,IAAI,CAACK,WAAW,EACpB;MACI,MAAMC,OAAO,GAAG,IAAIC,IAAI,EAAE;MAC1B,MAAMC,SAAS,GAAI,GAAEF,OAAO,CAACG,OAAO,EAAG,IAAGH,OAAO,CAACI,QAAQ,EAAE,GAAC,CAAE,IAAGJ,OAAO,CAACK,WAAW,EAAG,IAAGL,OAAO,CAACM,QAAQ,EAAG,IAAGN,OAAO,CAACO,UAAU,EAAG,IAAGP,OAAO,CAACQ,UAAU,EAAG,EAAC;MAC/JnB,QAAQ,CAACoB,YAAY,CAAC;QAACC,GAAG,EAAC,aAAa;QAAEC,KAAK,EAAE;MAAI,CAAC,CAAC,CAAC;MACxDtB,QAAQ,CAACoB,YAAY,CAAC;QAACC,GAAG,EAAC,eAAe;QAAEC,KAAK,EAAET;MAAS,CAAC,CAAC,CAAC;IACnE;IACA;EACJ,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC;AACd;AAAC,GAlCQD,WAAW;EAAA,QAECF,WAAW;AAAA;AAkChC,eAAeE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}