{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst questionsSlice = createSlice({\n  name: 'questionsData',\n  initialState: {\n    isDirty: true,\n    data: [{\n      id: 0,\n      question: \"\",\n      alternatives: [{\n        id: 1,\n        answer: \"default\"\n      }],\n      answerId: 0,\n      userAnswerId: 0\n    }]\n  },\n  reducers: {\n    loadQuestionsData(state, action) {\n      state.data = action.payload;\n    },\n    selectQuestionAlternative(state, action) {\n      console.log(action.payload.answerId);\n      state.data.map(qObject => {\n        if (qObject.id == action.payload.questionId) {\n          qObject.userAnswerId = action.payload.answerId;\n        }\n      });\n    },\n    setSubmissionDirty(state, action) {\n      state.isDirty = action.payload.value;\n    }\n  }\n});\nexport const {\n  loadQuestionsData,\n  selectQuestionAlternative,\n  setSubmissionDirty\n} = questionsSlice.actions;\nexport const questionsReducer = questionsSlice.reducer;","map":{"version":3,"names":["createSlice","questionsSlice","name","initialState","isDirty","data","id","question","alternatives","answer","answerId","userAnswerId","reducers","loadQuestionsData","state","action","payload","selectQuestionAlternative","console","log","map","qObject","questionId","setSubmissionDirty","value","actions","questionsReducer","reducer"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/store/slices/questionsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst questionsSlice = createSlice({\n    name: 'questionsData',\n    initialState:{\n        isDirty: true,\n        data: [\n        {\n            id: 0,\n            question: \"\",\n            alternatives: [{id: 1, answer: \"default\"}], \n            answerId: 0,\n            userAnswerId: 0\n        }]\n    },\n    reducers:\n    {\n        loadQuestionsData(state, action)\n        {\n            state.data = action.payload;\n        },\n        selectQuestionAlternative(state, action)\n        {\n            console.log(action.payload.answerId);\n            state.data.map((qObject) => {\n                if(qObject.id == action.payload.questionId)\n                {\n                    qObject.userAnswerId = action.payload.answerId;\n                }\n            })\n        },\n        setSubmissionDirty(state, action)\n        {\n            state.isDirty = action.payload.value;\n        }\n    }\n});\n\nexport const { loadQuestionsData, selectQuestionAlternative, setSubmissionDirty } = questionsSlice.actions;\nexport const questionsReducer = questionsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,cAAc,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAC;IACTC,OAAO,EAAE,IAAI;IACbC,IAAI,EAAE,CACN;MACIC,EAAE,EAAE,CAAC;MACLC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,CAAC;QAACF,EAAE,EAAE,CAAC;QAAEG,MAAM,EAAE;MAAS,CAAC,CAAC;MAC1CC,QAAQ,EAAE,CAAC;MACXC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,QAAQ,EACR;IACIC,iBAAiB,CAACC,KAAK,EAAEC,MAAM,EAC/B;MACID,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,yBAAyB,CAACH,KAAK,EAAEC,MAAM,EACvC;MACIG,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACC,OAAO,CAACN,QAAQ,CAAC;MACpCI,KAAK,CAACT,IAAI,CAACe,GAAG,CAAEC,OAAO,IAAK;QACxB,IAAGA,OAAO,CAACf,EAAE,IAAIS,MAAM,CAACC,OAAO,CAACM,UAAU,EAC1C;UACID,OAAO,CAACV,YAAY,GAAGI,MAAM,CAACC,OAAO,CAACN,QAAQ;QAClD;MACJ,CAAC,CAAC;IACN,CAAC;IACDa,kBAAkB,CAACT,KAAK,EAAEC,MAAM,EAChC;MACID,KAAK,CAACV,OAAO,GAAGW,MAAM,CAACC,OAAO,CAACQ,KAAK;IACxC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,iBAAiB;EAAEI,yBAAyB;EAAEM;AAAmB,CAAC,GAAGtB,cAAc,CAACwB,OAAO;AAC1G,OAAO,MAAMC,gBAAgB,GAAGzB,cAAc,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}