{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nlet previousPage = \"\";\nconst navigationSlice = createSlice({\n  name: 'navigation',\n  initialState: {\n    previousPage: window.location.pathname,\n    currentPath: window.location.pathname\n  },\n  reducers: {\n    changePath(state, action) {\n      if (state.currentPath != \"/applicantLogin\") {\n        previousPage = state.currentPath;\n        state.currentPath = action.payload;\n      }\n    },\n    loadPath(state, action) {\n      previousPage = state.currentPath;\n      state.currentPath = action.payload;\n      pushHistory(state.currentPath);\n    }\n  }\n});\nconst pushHistory = to => {\n  window.history.pushState({}, '', to);\n};\nexport const {\n  loadPath,\n  changePath\n} = navigationSlice.actions;\nexport const navigationReducer = navigationSlice.reducer;\nexport { previousPage };","map":{"version":3,"names":["createSlice","useDispatch","previousPage","navigationSlice","name","initialState","window","location","pathname","currentPath","reducers","changePath","state","action","payload","loadPath","pushHistory","to","history","pushState","actions","navigationReducer","reducer"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/store/slices/navigationSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\n\nlet previousPage = \"\";\nconst navigationSlice = createSlice({\n    name: 'navigation',\n    initialState: \n    {\n        previousPage: window.location.pathname, \n        currentPath: window.location.pathname\n    },\n    reducers:\n    {\n        changePath(state, action)\n        {\n            if(state.currentPath != \"/applicantLogin\")\n            {\n                previousPage = state.currentPath;\n                state.currentPath = action.payload;\n            }\n        },\n        loadPath(state, action)\n        {\n            previousPage = state.currentPath;\n            state.currentPath = action.payload;\n            pushHistory(state.currentPath);\n        },\n    }\n});\n\nconst pushHistory = (to) =>\n{\n    window.history.pushState({}, '', to);\n}\n\nexport const { loadPath, changePath } = navigationSlice.actions;\nexport const navigationReducer = navigationSlice.reducer;\nexport { previousPage };\n\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AAEzC,IAAIC,YAAY,GAAG,EAAE;AACrB,MAAMC,eAAe,GAAGH,WAAW,CAAC;EAChCI,IAAI,EAAE,YAAY;EAClBC,YAAY,EACZ;IACIH,YAAY,EAAEI,MAAM,CAACC,QAAQ,CAACC,QAAQ;IACtCC,WAAW,EAAEH,MAAM,CAACC,QAAQ,CAACC;EACjC,CAAC;EACDE,QAAQ,EACR;IACIC,UAAU,CAACC,KAAK,EAAEC,MAAM,EACxB;MACI,IAAGD,KAAK,CAACH,WAAW,IAAI,iBAAiB,EACzC;QACIP,YAAY,GAAGU,KAAK,CAACH,WAAW;QAChCG,KAAK,CAACH,WAAW,GAAGI,MAAM,CAACC,OAAO;MACtC;IACJ,CAAC;IACDC,QAAQ,CAACH,KAAK,EAAEC,MAAM,EACtB;MACIX,YAAY,GAAGU,KAAK,CAACH,WAAW;MAChCG,KAAK,CAACH,WAAW,GAAGI,MAAM,CAACC,OAAO;MAClCE,WAAW,CAACJ,KAAK,CAACH,WAAW,CAAC;IAClC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMO,WAAW,GAAIC,EAAE,IACvB;EACIX,MAAM,CAACY,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,EAAEF,EAAE,CAAC;AACxC,CAAC;AAED,OAAO,MAAM;EAAEF,QAAQ;EAAEJ;AAAW,CAAC,GAAGR,eAAe,CAACiB,OAAO;AAC/D,OAAO,MAAMC,iBAAiB,GAAGlB,eAAe,CAACmB,OAAO;AACxD,SAASpB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}