{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { changeUser } from \"../store\";\nimport { useLazyFetchUserQuery } from \"../store\";\nfunction TryUserLogin(loginInput) {\n  _s();\n  const dispatch = useDispatch();\n  const [loginError, setLoginError] = useState(false);\n  const [fetchUser, results] = useLazyFetchUserQuery();\n  const user = useSelector(state => state.userData);\n\n  // Dispatch loaded user data\n  useEffect(() => {\n    console.log(results);\n    if (loginInput == '') return;\n    if (results.isUninitialized) fetchUser(loginInput);\n    if (results.isFetching || results.isLoading || results.error || user.id != 0) return;\n    if (results.isSuccess && results.data.length <= 0) {\n      setLoginError(true);\n      return;\n    }\n    dispatch(changeUser(results.data[0]));\n    // console.log(`login validated, user dispatched`);\n    // console.log(fetchUser.data[0]);\n  });\n\n  return [fetchUser, results.error];\n}\n_s(TryUserLogin, \"ISWOlA+JK3K3G15Y5g6ujINnsG0=\", false, function () {\n  return [useDispatch, useLazyFetchUserQuery, useSelector];\n});\n_c = TryUserLogin;\nexport default TryUserLogin;\nvar _c;\n$RefreshReg$(_c, \"TryUserLogin\");","map":{"version":3,"names":["useDispatch","useSelector","useEffect","useState","changeUser","useLazyFetchUserQuery","TryUserLogin","loginInput","dispatch","loginError","setLoginError","fetchUser","results","user","state","userData","console","log","isUninitialized","isFetching","isLoading","error","id","isSuccess","data","length"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/Hooks/TryUserLogin.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { changeUser } from \"../store\";\nimport { \n    useLazyFetchUserQuery\n} from \"../store\";\n\nfunction TryUserLogin(loginInput)\n{\n    const dispatch = useDispatch();\n    const [loginError, setLoginError] = useState(false);\n    const [fetchUser, results] = useLazyFetchUserQuery();\n    const user = useSelector(state=>state.userData);\n    \n    // Dispatch loaded user data\n    useEffect(() => {\n        console.log(results);\n        if(loginInput == '') return;\n\n        if(results.isUninitialized) fetchUser(loginInput);\n        \n        if(results.isFetching  ||\n            results.isLoading || \n            results.error || \n            user.id != 0) return;\n            \n        \n        if(results.isSuccess && results.data.length <= 0){\n            setLoginError(true);\n            return;\n        }\n        \n        dispatch(changeUser(results.data[0]));\n        // console.log(`login validated, user dispatched`);\n        // console.log(fetchUser.data[0]);\n    });\n\n    return [fetchUser, results.error];\n}\n\nexport default TryUserLogin;"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,UAAU;AACrC,SACIC,qBAAqB,QAClB,UAAU;AAEjB,SAASC,YAAY,CAACC,UAAU,EAChC;EAAA;EACI,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACQ,SAAS,EAAEC,OAAO,CAAC,GAAGP,qBAAqB,EAAE;EACpD,MAAMQ,IAAI,GAAGZ,WAAW,CAACa,KAAK,IAAEA,KAAK,CAACC,QAAQ,CAAC;;EAE/C;EACAb,SAAS,CAAC,MAAM;IACZc,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;IACpB,IAAGL,UAAU,IAAI,EAAE,EAAE;IAErB,IAAGK,OAAO,CAACM,eAAe,EAAEP,SAAS,CAACJ,UAAU,CAAC;IAEjD,IAAGK,OAAO,CAACO,UAAU,IACjBP,OAAO,CAACQ,SAAS,IACjBR,OAAO,CAACS,KAAK,IACbR,IAAI,CAACS,EAAE,IAAI,CAAC,EAAE;IAGlB,IAAGV,OAAO,CAACW,SAAS,IAAIX,OAAO,CAACY,IAAI,CAACC,MAAM,IAAI,CAAC,EAAC;MAC7Cf,aAAa,CAAC,IAAI,CAAC;MACnB;IACJ;IAEAF,QAAQ,CAACJ,UAAU,CAACQ,OAAO,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC;IACA;EACJ,CAAC,CAAC;;EAEF,OAAO,CAACb,SAAS,EAAEC,OAAO,CAACS,KAAK,CAAC;AACrC;AAAC,GA/BQf,YAAY;EAAA,QAEAN,WAAW,EAECK,qBAAqB,EACrCJ,WAAW;AAAA;AAAA,KALnBK,YAAY;AAiCrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}