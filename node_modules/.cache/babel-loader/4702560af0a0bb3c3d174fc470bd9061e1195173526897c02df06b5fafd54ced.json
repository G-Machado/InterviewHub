{"ast":null,"code":"var _jsxFileName = \"/Users/machadogomes/Documents/InterviewHub/question_hub/src/Pages/QuestionsExam.js\",\n  _s = $RefreshSig$();\nimport Link from '../Components/Link';\nimport Question from '../Components/Question';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { SUBMIT_PAGE_PATH, useFetchQuestionsQuery, useFetchSubmissionQuery, loadQuestionsData, setUserField, setupSubmission } from '../store';\nimport useSelectAlternative from '../Hooks/useSelectAlternative';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionsExam() {\n  _s();\n  // // Dispatch loaded submission\n  // useEffect(()=>{\n  //     if(!submissionFetch.data || \n  //         submissionFetch.isLoading || \n  //         submissionFetch.error) return;\n\n  //     // When user is created, so is the submission\n  //     // so we don't need to check for anything\n  //     dispatch(setupSubmission(submissionFetch.data[0]));\n  //     return;\n  // }, [submissionFetch.data]);\n\n  // // Filter and dispatch loaded user questions\n  // let filteredQuestions = [];\n  // useEffect(() => {\n  //     if(!data)return;\n\n  //     // console.log(data);\n  //     data.map((question) =>\n  //     {\n  //         user.questionsId.map((id) => {\n  //             if(id == question.id) \n  //             {\n  //                 filteredQuestions.push(question);\n  //             }\n  //         });\n  //     })\n\n  //     dispatch(loadQuestionsData(filteredQuestions));\n\n  //     if(!user.startedExam)\n  //     {\n  //         const newDate = new Date();\n  //         const startTime = `${newDate.getDate()}/${newDate.getMonth()+1}/${newDate.getFullYear()}-${newDate.getHours()}:${newDate.getMinutes()}:${newDate.getSeconds()}`;\n  //         dispatch(setUserField({key:\"startedExam\", value: true}));\n  //         dispatch(setUserField({key:\"examStartTime\", value: startTime}));\n  //     }\n  //     return;\n  // }, [data]);\n\n  const questionsData = useSelector(state => state.questionsData.data);\n\n  // TODO -> display skeleton while loading || display\n  if (!questionsData) return;\n  const questionsContent = questionsData.map(qObject => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingLeft: 15,\n          paddingRight: 15\n        },\n        children: /*#__PURE__*/_jsxDEV(Question, {\n          data: qObject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, qObject.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        fontSize: 24\n      },\n      children: \"Questions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), questionsContent, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: 35,\n        heigth: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: SUBMIT_PAGE_PATH,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: `16px`\n          },\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: 55\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n}\n_s(QuestionsExam, \"Mtjn9U9oJjfPMnG6m+uGgeYsyvA=\", false, function () {\n  return [useSelector];\n});\n_c = QuestionsExam;\nexport default QuestionsExam;\nvar _c;\n$RefreshReg$(_c, \"QuestionsExam\");","map":{"version":3,"names":["Link","Question","useSelector","useDispatch","useEffect","SUBMIT_PAGE_PATH","useFetchQuestionsQuery","useFetchSubmissionQuery","loadQuestionsData","setUserField","setupSubmission","useSelectAlternative","QuestionsExam","questionsData","state","data","questionsContent","map","qObject","paddingTop","paddingLeft","paddingRight","id","display","justifyContent","fontSize","heigth"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/Pages/QuestionsExam.js"],"sourcesContent":["import Link from '../Components/Link';\nimport Question from '../Components/Question';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { SUBMIT_PAGE_PATH, \n    useFetchQuestionsQuery,\n    useFetchSubmissionQuery,\n    loadQuestionsData,\n    setUserField,\n    setupSubmission\n} from '../store';\nimport useSelectAlternative from '../Hooks/useSelectAlternative';\n\nfunction QuestionsExam()\n{\n    // // Dispatch loaded submission\n    // useEffect(()=>{\n    //     if(!submissionFetch.data || \n    //         submissionFetch.isLoading || \n    //         submissionFetch.error) return;\n        \n    //     // When user is created, so is the submission\n    //     // so we don't need to check for anything\n    //     dispatch(setupSubmission(submissionFetch.data[0]));\n    //     return;\n    // }, [submissionFetch.data]);\n\n    // // Filter and dispatch loaded user questions\n    // let filteredQuestions = [];\n    // useEffect(() => {\n    //     if(!data)return;\n\n    //     // console.log(data);\n    //     data.map((question) =>\n    //     {\n    //         user.questionsId.map((id) => {\n    //             if(id == question.id) \n    //             {\n    //                 filteredQuestions.push(question);\n    //             }\n    //         });\n    //     })\n\n    //     dispatch(loadQuestionsData(filteredQuestions));\n        \n    //     if(!user.startedExam)\n    //     {\n    //         const newDate = new Date();\n    //         const startTime = `${newDate.getDate()}/${newDate.getMonth()+1}/${newDate.getFullYear()}-${newDate.getHours()}:${newDate.getMinutes()}:${newDate.getSeconds()}`;\n    //         dispatch(setUserField({key:\"startedExam\", value: true}));\n    //         dispatch(setUserField({key:\"examStartTime\", value: startTime}));\n    //     }\n    //     return;\n    // }, [data]);\n    \n    const questionsData = useSelector((state)=> state.questionsData.data);\n    \n    // TODO -> display skeleton while loading || display\n    if(!questionsData) return;\n\n    const questionsContent = questionsData.map((qObject) => \n    {\n        return <div key={qObject.id} style={{paddingTop: 5}}>\n            <div style={{paddingLeft: 15, paddingRight: 15}}>\n                <Question data={qObject}/>\n            </div>\n        </div>\n    })\n    \n    return <div>\n        <h3 style={{display: 'flex',  justifyContent:'center', fontSize: 24}}>Questions:</h3>\n        {questionsContent}\n        <div style={{display: 'flex', justifyContent:'center',paddingTop: 35, heigth: 40}}>\n            <Link to={SUBMIT_PAGE_PATH}>\n                <button style={{fontSize : `16px`}}>SUBMIT</button>\n            </Link>\n            <div style={{paddingTop: 55}}></div>\n        </div>\n    </div>\n}\n\nexport default QuestionsExam;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,gBAAgB,EACrBC,sBAAsB,EACtBC,uBAAuB,EACvBC,iBAAiB,EACjBC,YAAY,EACZC,eAAe,QACZ,UAAU;AACjB,OAAOC,oBAAoB,MAAM,+BAA+B;AAAC;AAEjE,SAASC,aAAa,GACtB;EAAA;EACI;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,aAAa,GAAGX,WAAW,CAAEY,KAAK,IAAIA,KAAK,CAACD,aAAa,CAACE,IAAI,CAAC;;EAErE;EACA,IAAG,CAACF,aAAa,EAAE;EAEnB,MAAMG,gBAAgB,GAAGH,aAAa,CAACI,GAAG,CAAEC,OAAO,IACnD;IACI,oBAAO;MAAsB,KAAK,EAAE;QAACC,UAAU,EAAE;MAAC,CAAE;MAAA,uBAChD;QAAK,KAAK,EAAE;UAACC,WAAW,EAAE,EAAE;UAAEC,YAAY,EAAE;QAAE,CAAE;QAAA,uBAC5C,QAAC,QAAQ;UAAC,IAAI,EAAEH;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA;IACxB,GAHOA,OAAO,CAACI,EAAE;MAAA;MAAA;MAAA;IAAA,QAIrB;EACV,CAAC,CAAC;EAEF,oBAAO;IAAA,wBACH;MAAI,KAAK,EAAE;QAACC,OAAO,EAAE,MAAM;QAAGC,cAAc,EAAC,QAAQ;QAAEC,QAAQ,EAAE;MAAE,CAAE;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,EACpFT,gBAAgB,eACjB;MAAK,KAAK,EAAE;QAACO,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAC,QAAQ;QAACL,UAAU,EAAE,EAAE;QAAEO,MAAM,EAAE;MAAE,CAAE;MAAA,wBAC9E,QAAC,IAAI;QAAC,EAAE,EAAErB,gBAAiB;QAAA,uBACvB;UAAQ,KAAK,EAAE;YAACoB,QAAQ,EAAI;UAAK,CAAE;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QAChD,eACP;QAAK,KAAK,EAAE;UAACN,UAAU,EAAE;QAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AACV;AAAC,GAlEQP,aAAa;EAAA,QA0CIV,WAAW;AAAA;AAAA,KA1C5BU,aAAa;AAoEtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}