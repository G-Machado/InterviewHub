{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst questionsSlice = createSlice({\n  name: 'questions',\n  initialState: [{\n    id: 14,\n    question: \"How much is 1 + 1 ?\",\n    alternatives: [{\n      \"id\": 1,\n      \"answer\": \"2\"\n    }, {\n      \"id\": 3,\n      \"answer\": \"11\"\n    }],\n    answerId: 1\n  }],\n  reducers: {\n    loadQuestions(state, action) {\n      state = action.payload;\n    }\n  }\n});\nexport const {\n  loadQuestions\n} = questionsSlice.actions;\nexport const questionsReducer = questionsSlice.reducer;","map":{"version":3,"names":["createSlice","questionsSlice","name","initialState","id","question","alternatives","answerId","reducers","loadQuestions","state","action","payload","actions","questionsReducer","reducer"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/store/slices/questionsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst questionsSlice = createSlice({\n    name: 'questions',\n    initialState:[\n        {\n            id: 14,\n            question: \"How much is 1 + 1 ?\",\n            alternatives: [\n                {\"id\": 1, \"answer\":\"2\"}, \n                {\"id\": 3, \"answer\":\"11\"}\n            ],\n            answerId: 1\n        }\n    ],\n    reducers:\n    {\n        loadQuestions(state, action)\n        {\n            state = action.payload;\n        }\n    }\n});\n\nexport const { loadQuestions } = questionsSlice.actions;\nexport const questionsReducer = questionsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,cAAc,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAC,CACT;IACIC,EAAE,EAAE,EAAE;IACNC,QAAQ,EAAE,qBAAqB;IAC/BC,YAAY,EAAE,CACV;MAAC,IAAI,EAAE,CAAC;MAAE,QAAQ,EAAC;IAAG,CAAC,EACvB;MAAC,IAAI,EAAE,CAAC;MAAE,QAAQ,EAAC;IAAI,CAAC,CAC3B;IACDC,QAAQ,EAAE;EACd,CAAC,CACJ;EACDC,QAAQ,EACR;IACIC,aAAa,CAACC,KAAK,EAAEC,MAAM,EAC3B;MACID,KAAK,GAAGC,MAAM,CAACC,OAAO;IAC1B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAc,CAAC,GAAGR,cAAc,CAACY,OAAO;AACvD,OAAO,MAAMC,gBAAgB,GAAGb,cAAc,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}