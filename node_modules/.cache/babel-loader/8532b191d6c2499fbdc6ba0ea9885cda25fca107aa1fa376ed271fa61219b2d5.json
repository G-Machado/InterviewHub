{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { changeUser } from \"../store\";\nfunction useLoadUser(loginInput) {\n  _s();\n  const dispatch = useDispatch();\n  const fetchUser = useFetchUserQuery(loginInput);\n  const submissionFetch = useFetchSubmissionQuery(user);\n\n  // Dispatch loaded submission\n  useEffect(() => {\n    if (!submissionFetch.data || submissionFetch.isLoading || submissionFetch.error) return;\n\n    // When user is created, so is the submission\n    // so we don't need to check for anything\n    dispatch(setupSubmission(submissionFetch.data[0]));\n    console.log('loaded submission to slice');\n    return;\n  }, [submissionFetch.data]);\n\n  // Filter and dispatch loaded user questions\n  let filteredQuestions = [];\n  useEffect(() => {\n    if (!data) return;\n\n    // console.log(data);\n    data.map(question => {\n      user.questionsId.map(id => {\n        if (id == question.id) {\n          filteredQuestions.push(question);\n        }\n      });\n    });\n    dispatch(loadQuestionsData(filteredQuestions));\n    console.log('loaded filtered questions to slice');\n    if (!user.startedExam) {\n      const newDate = new Date();\n      const startTime = `${newDate.getDate()}/${newDate.getMonth() + 1}/${newDate.getFullYear()}-${newDate.getHours()}:${newDate.getMinutes()}:${newDate.getSeconds()}`;\n      dispatch(setUserField({\n        key: \"startedExam\",\n        value: true\n      }));\n      dispatch(setUserField({\n        key: \"examStartTime\",\n        value: startTime\n      }));\n    }\n    return;\n  }, [data]);\n\n  // Dispatch loaded user data\n  useEffect(() => {\n    if (!fetchUser.data || fetchUser.isLoading || fetchUser.error) return;\n    dispatch(changeUser(fetchUser.data));\n    console.log('loaded user to slice');\n    return;\n  }, [fetchUser.data]);\n}\n_s(useLoadUser, \"2Jlwsb0cm9wI3kY5tFkb2WCKU6k=\", true, function () {\n  return [useDispatch];\n});\nexport default useLoadUser;","map":{"version":3,"names":["useDispatch","changeUser","useLoadUser","loginInput","dispatch","fetchUser","useFetchUserQuery","submissionFetch","useFetchSubmissionQuery","user","useEffect","data","isLoading","error","setupSubmission","console","log","filteredQuestions","map","question","questionsId","id","push","loadQuestionsData","startedExam","newDate","Date","startTime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","setUserField","key","value"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/Hooks/useLoadUser.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { changeUser } from \"../store\";\n\nfunction useLoadUser(loginInput)\n{\n    const dispatch = useDispatch();\n    const fetchUser = useFetchUserQuery(loginInput);\n    const submissionFetch = useFetchSubmissionQuery(user);\n\n    // Dispatch loaded submission\n    useEffect(()=>{\n        if(!submissionFetch.data || \n            submissionFetch.isLoading || \n            submissionFetch.error) return;\n        \n        // When user is created, so is the submission\n        // so we don't need to check for anything\n        dispatch(setupSubmission(submissionFetch.data[0]));\n        console.log('loaded submission to slice');\n\n        return;\n    }, [submissionFetch.data]);\n\n    // Filter and dispatch loaded user questions\n    let filteredQuestions = [];\n    useEffect(() => {\n        if(!data)return;\n\n        // console.log(data);\n        data.map((question) =>\n        {\n            user.questionsId.map((id) => {\n                if(id == question.id) \n                {\n                    filteredQuestions.push(question);\n                }\n            });\n        })\n\n        dispatch(loadQuestionsData(filteredQuestions));\n        console.log('loaded filtered questions to slice');\n        \n        if(!user.startedExam)\n        {\n            const newDate = new Date();\n            const startTime = `${newDate.getDate()}/${newDate.getMonth()+1}/${newDate.getFullYear()}-${newDate.getHours()}:${newDate.getMinutes()}:${newDate.getSeconds()}`;\n            dispatch(setUserField({key:\"startedExam\", value: true}));\n            dispatch(setUserField({key:\"examStartTime\", value: startTime}));\n        }\n\n        return;\n    }, [data]);    \n\n    // Dispatch loaded user data\n    useEffect(() => {\n        if(!fetchUser.data || fetchUser.isLoading || fetchUser.error) return;\n\n        dispatch(changeUser(fetchUser.data));\n        console.log('loaded user to slice');\n\n        return;\n    }, [fetchUser.data]);\n}\n\nexport default useLoadUser;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,UAAU;AAErC,SAASC,WAAW,CAACC,UAAU,EAC/B;EAAA;EACI,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAMK,SAAS,GAAGC,iBAAiB,CAACH,UAAU,CAAC;EAC/C,MAAMI,eAAe,GAAGC,uBAAuB,CAACC,IAAI,CAAC;;EAErD;EACAC,SAAS,CAAC,MAAI;IACV,IAAG,CAACH,eAAe,CAACI,IAAI,IACpBJ,eAAe,CAACK,SAAS,IACzBL,eAAe,CAACM,KAAK,EAAE;;IAE3B;IACA;IACAT,QAAQ,CAACU,eAAe,CAACP,eAAe,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAClDI,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAEzC;EACJ,CAAC,EAAE,CAACT,eAAe,CAACI,IAAI,CAAC,CAAC;;EAE1B;EACA,IAAIM,iBAAiB,GAAG,EAAE;EAC1BP,SAAS,CAAC,MAAM;IACZ,IAAG,CAACC,IAAI,EAAC;;IAET;IACAA,IAAI,CAACO,GAAG,CAAEC,QAAQ,IAClB;MACIV,IAAI,CAACW,WAAW,CAACF,GAAG,CAAEG,EAAE,IAAK;QACzB,IAAGA,EAAE,IAAIF,QAAQ,CAACE,EAAE,EACpB;UACIJ,iBAAiB,CAACK,IAAI,CAACH,QAAQ,CAAC;QACpC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;IAEFf,QAAQ,CAACmB,iBAAiB,CAACN,iBAAiB,CAAC,CAAC;IAC9CF,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IAEjD,IAAG,CAACP,IAAI,CAACe,WAAW,EACpB;MACI,MAAMC,OAAO,GAAG,IAAIC,IAAI,EAAE;MAC1B,MAAMC,SAAS,GAAI,GAAEF,OAAO,CAACG,OAAO,EAAG,IAAGH,OAAO,CAACI,QAAQ,EAAE,GAAC,CAAE,IAAGJ,OAAO,CAACK,WAAW,EAAG,IAAGL,OAAO,CAACM,QAAQ,EAAG,IAAGN,OAAO,CAACO,UAAU,EAAG,IAAGP,OAAO,CAACQ,UAAU,EAAG,EAAC;MAC/J7B,QAAQ,CAAC8B,YAAY,CAAC;QAACC,GAAG,EAAC,aAAa;QAAEC,KAAK,EAAE;MAAI,CAAC,CAAC,CAAC;MACxDhC,QAAQ,CAAC8B,YAAY,CAAC;QAACC,GAAG,EAAC,eAAe;QAAEC,KAAK,EAAET;MAAS,CAAC,CAAC,CAAC;IACnE;IAEA;EACJ,CAAC,EAAE,CAAChB,IAAI,CAAC,CAAC;;EAEV;EACAD,SAAS,CAAC,MAAM;IACZ,IAAG,CAACL,SAAS,CAACM,IAAI,IAAIN,SAAS,CAACO,SAAS,IAAIP,SAAS,CAACQ,KAAK,EAAE;IAE9DT,QAAQ,CAACH,UAAU,CAACI,SAAS,CAACM,IAAI,CAAC,CAAC;IACpCI,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IAEnC;EACJ,CAAC,EAAE,CAACX,SAAS,CAACM,IAAI,CAAC,CAAC;AACxB;AAAC,GA3DQT,WAAW;EAAA,QAECF,WAAW;AAAA;AA2DhC,eAAeE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}