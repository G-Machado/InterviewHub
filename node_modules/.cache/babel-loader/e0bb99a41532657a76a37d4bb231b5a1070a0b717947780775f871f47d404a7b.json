{"ast":null,"code":"var _jsxFileName = \"/Users/machadogomes/Documents/InterviewHub/question_hub/src/Components/ExamTimer.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentTimeLeft = user => {\n  const date = new Date();\n  const startTime = user.startedExam;\n  console.log(user.examStartTime);\n  const startHour = parseInt(startTime.split(\"-\")[1].split(\":\")[0]);\n  const startMinute = parseInt(startTime.split(\"-\")[1].split(\":\")[1]);\n  const startSecond = parseInt(startTime.split(\"-\")[1].split(\":\")[2]);\n  const startDay = parseInt(startTime.split(\"-\")[0].split(\"/\")[0]);\n  const deltaSeconds = date.getSeconds() < startSecond ? date.getSeconds() : date.getSeconds() - startSecond;\n  const deltaMinutes = date.getMinutes() < startMinute ? date.getMinutes() : date.getMinutes() - startMinute;\n  const deltaHours = date.getHours() < startHour ? date.getHours() : date.getHours() - startHour;\n  const deltaDays = date.getDate() < startDay ? date.getDate() : date.getDate() - startDay;\n  const deltaTime = deltaSeconds + deltaMinutes * 60 + deltaHours * 3600;\n  const timeLeft = 30 * 60 - deltaTime;\n  return timeLeft;\n};\nfunction ExamTimer(_ref) {\n  _s();\n  let {\n    handleTimeOver\n  } = _ref;\n  const [date, setDate] = useState(new Date());\n  const [refresh, setRefresh] = useState(false);\n  const user = useSelector(state => state.userData);\n  const timeLeft = currentTimeLeft(user);\n\n  // let deltaTimeDisplay = `${parseInt(deltaTime/3600)}:${parseInt(deltaTime/60)}:${parseInt(deltaTime%60)}`;\n  let timeLeftDisplay = `${parseInt(timeLeft / 3600)}:${parseInt(timeLeft / 60)}:${parseInt(timeLeft % 60)}`;\n\n  // Updates component every second\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: timeLeftDisplay\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n}\n_s(ExamTimer, \"/+o98ffNjUsaQkokHkPpANwUfFs=\", false, function () {\n  return [useSelector];\n});\n_c = ExamTimer;\nexport default ExamTimer;\nexport { currentTimeLeft };\nvar _c;\n$RefreshReg$(_c, \"ExamTimer\");","map":{"version":3,"names":["useSelector","useEffect","useState","currentTimeLeft","user","date","Date","startTime","startedExam","console","log","examStartTime","startHour","parseInt","split","startMinute","startSecond","startDay","deltaSeconds","getSeconds","deltaMinutes","getMinutes","deltaHours","getHours","deltaDays","getDate","deltaTime","timeLeft","ExamTimer","handleTimeOver","setDate","refresh","setRefresh","state","userData","timeLeftDisplay","interval","setInterval","clearInterval"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/Components/ExamTimer.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nconst currentTimeLeft = (user)=> {\n       \n    const date = new Date();\n    const startTime = user.startedExam;\n    \n    console.log(user.examStartTime);\n    const startHour = parseInt(startTime.split(\"-\")[1].split(\":\")[0]);\n    const startMinute = parseInt(startTime.split(\"-\")[1].split(\":\")[1]);\n    const startSecond = parseInt(startTime.split(\"-\")[1].split(\":\")[2]);\n    const startDay = parseInt(startTime.split(\"-\")[0].split(\"/\")[0]);\n    \n    const deltaSeconds = date.getSeconds() < startSecond ? date.getSeconds() : date.getSeconds() - startSecond;\n    const deltaMinutes = date.getMinutes() < startMinute ? date.getMinutes() : date.getMinutes() - startMinute;\n    const deltaHours = date.getHours() < startHour ? date.getHours() : date.getHours() - startHour;\n    const deltaDays =  date.getDate() < startDay ? date.getDate() : date.getDate() - startDay;\n    \n    const deltaTime = deltaSeconds + deltaMinutes * 60 + deltaHours * 3600;\n    const timeLeft = 30 * 60 - deltaTime;\n\n    return timeLeft;\n}\n\nfunction ExamTimer({handleTimeOver})\n{\n    const [date, setDate] = useState(new Date());\n    const [refresh, setRefresh] = useState(false);\n    const user = useSelector(state => state.userData);\n\n    const timeLeft = currentTimeLeft(user);\n\n    // let deltaTimeDisplay = `${parseInt(deltaTime/3600)}:${parseInt(deltaTime/60)}:${parseInt(deltaTime%60)}`;\n    let timeLeftDisplay = `${parseInt(timeLeft/3600)}:${parseInt(timeLeft/60)}:${parseInt(timeLeft%60)}`;\n\n    // Updates component every second\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setDate(new Date);\n        }, 1000);\n        \n        return () => clearInterval(interval);\n    }, []);\n    \n    return <div>{timeLeftDisplay}</div>\n}\n\nexport default ExamTimer;\nexport {currentTimeLeft};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}