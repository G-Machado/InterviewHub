{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst userApi = createApi({\n  reducerPath: 'user',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3005'\n  }),\n  endpoints(builder) {\n    return {\n      fetchUser: builder.query({\n        query: email => {\n          return {\n            url: '/users',\n            params: {\n              email: email\n            },\n            method: 'GET'\n          };\n        }\n      }),\n      updateUser: builder.mutation({\n        query: user => {\n          return {\n            url: '/users',\n            body: {\n              id: 1\n            },\n            method: 'POST'\n          };\n        }\n      })\n    };\n  }\n});\nexport const {\n  useFetchUserQuery\n} = userApi;\nexport { userApi };","map":{"version":3,"names":["createApi","fetchBaseQuery","userApi","reducerPath","baseQuery","baseUrl","endpoints","builder","fetchUser","query","email","url","params","method","updateUser","mutation","user","body","id","useFetchUserQuery"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/store/apis/userApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst userApi = createApi({\n    reducerPath: 'user',\n    baseQuery: fetchBaseQuery({\n        baseUrl: 'http://localhost:3005'\n    }),\n    endpoints(builder){\n        return{\n            fetchUser: builder.query({\n                query: (email) => {\n                    return{\n                        url: '/users',\n                        params: {\n                            email: email\n                        },\n                        method: 'GET',\n                    };\n                }\n            }),\n            updateUser: builder.mutation({\n                query: (user) => {\n                    return{\n                        url: '/users',\n                        body: {\n                            id: 1\n                        },\n                        method: 'POST',\n                    };\n                }\n            })\n        };\n    }\n})\n\nexport const { useFetchUserQuery } = userApi;\nexport { userApi };"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,MAAMC,OAAO,GAAGF,SAAS,CAAC;EACtBG,WAAW,EAAE,MAAM;EACnBC,SAAS,EAAEH,cAAc,CAAC;IACtBI,OAAO,EAAE;EACb,CAAC,CAAC;EACFC,SAAS,CAACC,OAAO,EAAC;IACd,OAAM;MACFC,SAAS,EAAED,OAAO,CAACE,KAAK,CAAC;QACrBA,KAAK,EAAGC,KAAK,IAAK;UACd,OAAM;YACFC,GAAG,EAAE,QAAQ;YACbC,MAAM,EAAE;cACJF,KAAK,EAAEA;YACX,CAAC;YACDG,MAAM,EAAE;UACZ,CAAC;QACL;MACJ,CAAC,CAAC;MACFC,UAAU,EAAEP,OAAO,CAACQ,QAAQ,CAAC;QACzBN,KAAK,EAAGO,IAAI,IAAK;UACb,OAAM;YACFL,GAAG,EAAE,QAAQ;YACbM,IAAI,EAAE;cACFC,EAAE,EAAE;YACR,CAAC;YACDL,MAAM,EAAE;UACZ,CAAC;QACL;MACJ,CAAC;IACL,CAAC;EACL;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM;AAAkB,CAAC,GAAGjB,OAAO;AAC5C,SAASA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}