{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSubmissionDirty, useUpdateSubmissionMutation } from '../store';\nfunction SubmissionUploader() {\n  _s();\n  const user = useSelector(state => state.userData);\n  const userAnswers = useSelector(state => state.submissionData);\n  const [updateSubmission, updateResults] = useUpdateSubmissionMutation();\n  const dispatch = useDispatch();\n\n  // Patches submissionData slice mutation to data base\n  useEffect(() => {\n    if (userAnswers.id == 0) return;\n    if (!user.startedExam) return;\n    if (!userAnswers.isDirty) return;\n    updateSubmission(userAnswers);\n    dispatch(setSubmissionDirty({\n      value: false\n    }));\n    console.log(\"Updated submission after mutation\");\n  }, [userAnswers]);\n}\n_s(SubmissionUploader, \"yTIKr4zaEQbrk/JcXgpJZxfqWLQ=\", false, function () {\n  return [useSelector, useSelector, useUpdateSubmissionMutation, useDispatch];\n});\n_c = SubmissionUploader;\nexport default SubmissionUploader;\nvar _c;\n$RefreshReg$(_c, \"SubmissionUploader\");","map":{"version":3,"names":["useEffect","useSelector","useDispatch","setSubmissionDirty","useUpdateSubmissionMutation","SubmissionUploader","user","state","userData","userAnswers","submissionData","updateSubmission","updateResults","dispatch","id","startedExam","isDirty","value","console","log"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/Effects/SubmissionUploader.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSubmissionDirty, useUpdateSubmissionMutation } from '../store';\n\nfunction SubmissionUploader()\n{\n    const user = useSelector(state => state.userData);\n    const userAnswers = useSelector((state)=>state.submissionData);\n    const [updateSubmission, updateResults] = useUpdateSubmissionMutation();\n    const dispatch = useDispatch();\n    \n    // Patches submissionData slice mutation to data base\n    useEffect(()=>{\n        if(userAnswers.id == 0) return;\n        if(!user.startedExam) return;\n        if(!userAnswers.isDirty) return;\n\n        updateSubmission(userAnswers);\n        dispatch(setSubmissionDirty({value: false}));\n        console.log(\"Updated submission after mutation\");\n    }, [userAnswers]);\n}\n\nexport default SubmissionUploader;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,EAAEC,2BAA2B,QAAQ,UAAU;AAE1E,SAASC,kBAAkB,GAC3B;EAAA;EACI,MAAMC,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAAC;EACjD,MAAMC,WAAW,GAAGR,WAAW,CAAEM,KAAK,IAAGA,KAAK,CAACG,cAAc,CAAC;EAC9D,MAAM,CAACC,gBAAgB,EAAEC,aAAa,CAAC,GAAGR,2BAA2B,EAAE;EACvE,MAAMS,QAAQ,GAAGX,WAAW,EAAE;;EAE9B;EACAF,SAAS,CAAC,MAAI;IACV,IAAGS,WAAW,CAACK,EAAE,IAAI,CAAC,EAAE;IACxB,IAAG,CAACR,IAAI,CAACS,WAAW,EAAE;IACtB,IAAG,CAACN,WAAW,CAACO,OAAO,EAAE;IAEzBL,gBAAgB,CAACF,WAAW,CAAC;IAC7BI,QAAQ,CAACV,kBAAkB,CAAC;MAACc,KAAK,EAAE;IAAK,CAAC,CAAC,CAAC;IAC5CC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EACpD,CAAC,EAAE,CAACV,WAAW,CAAC,CAAC;AACrB;AAAC,GAjBQJ,kBAAkB;EAAA,QAEVJ,WAAW,EACJA,WAAW,EACWG,2BAA2B,EACpDF,WAAW;AAAA;AAAA,KALvBG,kBAAkB;AAmB3B,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}