{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useFetchQuestionsQuery } from \"../store\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserField, loadQuestionsData } from \"../store\";\nimport { useEffect } from \"react\";\nfunction useLoadUserQuestions(user) {\n  _s();\n  const fetchQuestions = useFetchQuestionsQuery();\n  const dispatch = useDispatch();\n\n  // Filter and dispatch loaded user questions\n  useEffect(() => {\n    if (!user || user.id == 0) return;\n    if (fetchQuestions.isFetching || fetchQuestions.isLoading || fetchQuestions.error) return;\n    let filteredQuestions = [];\n    fetchQuestions.data.map(question => {\n      user.questionsId.map(id => {\n        if (id == question.id) {\n          filteredQuestions.push(question);\n        }\n      });\n    });\n    dispatch(loadQuestionsData(filteredQuestions));\n    console.log('loaded filtered questions to slice');\n    console.log(filteredQuestions);\n    if (!user.startedExam) {\n      const newDate = new Date();\n      const startTime = `${newDate.getDate()}/${newDate.getMonth() + 1}/${newDate.getFullYear()}-${newDate.getHours()}:${newDate.getMinutes()}:${newDate.getSeconds()}`;\n      setUserField(\"startedExam\", true);\n      setUserField(\"examStartTime\", startTime);\n    }\n  }, [user]);\n  return [fetchQuestions.isLoading, fetchQuestions.error];\n}\n_s(useLoadUserQuestions, \"3jgUETkbvUxV6b3npZ73n9P0lcc=\", false, function () {\n  return [useFetchQuestionsQuery, useDispatch];\n});\nexport default useLoadUserQuestions;","map":{"version":3,"names":["useFetchQuestionsQuery","useDispatch","setUserField","loadQuestionsData","useEffect","useLoadUserQuestions","user","fetchQuestions","dispatch","id","isFetching","isLoading","error","filteredQuestions","data","map","question","questionsId","push","console","log","startedExam","newDate","Date","startTime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/Hooks/useLoadUserQuestions.js"],"sourcesContent":["import { useFetchQuestionsQuery } from \"../store\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserField, loadQuestionsData } from \"../store\";\nimport { useEffect } from \"react\";\n\nfunction useLoadUserQuestions(user)\n{\n    const fetchQuestions = useFetchQuestionsQuery();\n    const dispatch = useDispatch();\n    \n    // Filter and dispatch loaded user questions\n    useEffect(() => {\n        if(!user || user.id == 0) return;\n        if(fetchQuestions.isFetching ||\n            fetchQuestions.isLoading ||\n            fetchQuestions.error) return;\n\n        let filteredQuestions = [];\n        fetchQuestions.data.map((question) =>\n        {\n            user.questionsId.map((id) => {\n                if(id == question.id) \n                {\n                    filteredQuestions.push(question);\n                }\n            });\n        })\n    \n        dispatch(loadQuestionsData(filteredQuestions));\n        console.log('loaded filtered questions to slice');\n        console.log(filteredQuestions);\n        \n        if(!user.startedExam)\n        {\n            const newDate = new Date();\n            const startTime = `${newDate.getDate()}/${newDate.getMonth()+1}/${newDate.getFullYear()}-${newDate.getHours()}:${newDate.getMinutes()}:${newDate.getSeconds()}`;\n    \n            setUserField(\"startedExam\", true);\n            setUserField(\"examStartTime\", startTime);\n        }\n    }, [user]);\n\n    return [fetchQuestions.isLoading, fetchQuestions.error];\n}\n\nexport default useLoadUserQuestions;"],"mappings":";AAAA,SAASA,sBAAsB,QAAQ,UAAU;AACjD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,EAAEC,iBAAiB,QAAQ,UAAU;AAC1D,SAASC,SAAS,QAAQ,OAAO;AAEjC,SAASC,oBAAoB,CAACC,IAAI,EAClC;EAAA;EACI,MAAMC,cAAc,GAAGP,sBAAsB,EAAE;EAC/C,MAAMQ,QAAQ,GAAGP,WAAW,EAAE;;EAE9B;EACAG,SAAS,CAAC,MAAM;IACZ,IAAG,CAACE,IAAI,IAAIA,IAAI,CAACG,EAAE,IAAI,CAAC,EAAE;IAC1B,IAAGF,cAAc,CAACG,UAAU,IACxBH,cAAc,CAACI,SAAS,IACxBJ,cAAc,CAACK,KAAK,EAAE;IAE1B,IAAIC,iBAAiB,GAAG,EAAE;IAC1BN,cAAc,CAACO,IAAI,CAACC,GAAG,CAAEC,QAAQ,IACjC;MACIV,IAAI,CAACW,WAAW,CAACF,GAAG,CAAEN,EAAE,IAAK;QACzB,IAAGA,EAAE,IAAIO,QAAQ,CAACP,EAAE,EACpB;UACII,iBAAiB,CAACK,IAAI,CAACF,QAAQ,CAAC;QACpC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;IAEFR,QAAQ,CAACL,iBAAiB,CAACU,iBAAiB,CAAC,CAAC;IAC9CM,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACjDD,OAAO,CAACC,GAAG,CAACP,iBAAiB,CAAC;IAE9B,IAAG,CAACP,IAAI,CAACe,WAAW,EACpB;MACI,MAAMC,OAAO,GAAG,IAAIC,IAAI,EAAE;MAC1B,MAAMC,SAAS,GAAI,GAAEF,OAAO,CAACG,OAAO,EAAG,IAAGH,OAAO,CAACI,QAAQ,EAAE,GAAC,CAAE,IAAGJ,OAAO,CAACK,WAAW,EAAG,IAAGL,OAAO,CAACM,QAAQ,EAAG,IAAGN,OAAO,CAACO,UAAU,EAAG,IAAGP,OAAO,CAACQ,UAAU,EAAG,EAAC;MAE/J5B,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC;MACjCA,YAAY,CAAC,eAAe,EAAEsB,SAAS,CAAC;IAC5C;EACJ,CAAC,EAAE,CAAClB,IAAI,CAAC,CAAC;EAEV,OAAO,CAACC,cAAc,CAACI,SAAS,EAAEJ,cAAc,CAACK,KAAK,CAAC;AAC3D;AAAC,GAtCQP,oBAAoB;EAAA,QAEFL,sBAAsB,EAC5BC,WAAW;AAAA;AAqChC,eAAeI,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}