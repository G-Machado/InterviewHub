{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst submissionsApi = createApi({\n  reducerPath: 'submissions',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3005'\n  }),\n  endpoints(builder) {\n    return {\n      fetchSubmission: builder.query({\n        query: user => {\n          return {\n            url: '/submissions',\n            params: {\n              userId: user.id\n            },\n            method: 'GET'\n          };\n        }\n      }),\n      postSubmission: builder.mutation({\n        query: submission => {\n          return {\n            url: '/submissions',\n            body: {\n              userId: submission.userId,\n              answerId: submission.answerId\n            },\n            method: 'POST'\n          };\n        }\n      })\n    };\n  }\n});\nexport const {\n  useFetchSubmissionQuery,\n  usePostSubmissonMutation\n} = submissionsApi;\nexport { submissionsApi };","map":{"version":3,"names":["createApi","fetchBaseQuery","submissionsApi","reducerPath","baseQuery","baseUrl","endpoints","builder","fetchSubmission","query","user","url","params","userId","id","method","postSubmission","mutation","submission","body","answerId","useFetchSubmissionQuery","usePostSubmissonMutation"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/store/apis/submissionsApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst submissionsApi = createApi({\n    reducerPath: 'submissions',\n    baseQuery: fetchBaseQuery({\n        baseUrl: 'http://localhost:3005'\n    }),\n    endpoints(builder){\n        return{\n            fetchSubmission: builder.query({\n                query: (user) => {\n                    return{\n                        url: '/submissions',\n                        params: {\n                            userId: user.id\n                        },\n                        method: 'GET',\n                    };\n                }\n            }),\n            postSubmission: builder.mutation({\n                query: (submission) => {\n                    return{\n                        url: '/submissions',\n                        body: {\n                            userId: submission.userId,\n                            answerId: submission.answerId\n                        },\n                        method: 'POST',\n                    };\n                }\n            })\n        };\n    }\n})\n\nexport const { useFetchSubmissionQuery, usePostSubmissonMutation } = submissionsApi;\nexport { submissionsApi };"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,MAAMC,cAAc,GAAGF,SAAS,CAAC;EAC7BG,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAEH,cAAc,CAAC;IACtBI,OAAO,EAAE;EACb,CAAC,CAAC;EACFC,SAAS,CAACC,OAAO,EAAC;IACd,OAAM;MACFC,eAAe,EAAED,OAAO,CAACE,KAAK,CAAC;QAC3BA,KAAK,EAAGC,IAAI,IAAK;UACb,OAAM;YACFC,GAAG,EAAE,cAAc;YACnBC,MAAM,EAAE;cACJC,MAAM,EAAEH,IAAI,CAACI;YACjB,CAAC;YACDC,MAAM,EAAE;UACZ,CAAC;QACL;MACJ,CAAC,CAAC;MACFC,cAAc,EAAET,OAAO,CAACU,QAAQ,CAAC;QAC7BR,KAAK,EAAGS,UAAU,IAAK;UACnB,OAAM;YACFP,GAAG,EAAE,cAAc;YACnBQ,IAAI,EAAE;cACFN,MAAM,EAAEK,UAAU,CAACL,MAAM;cACzBO,QAAQ,EAAEF,UAAU,CAACE;YACzB,CAAC;YACDL,MAAM,EAAE;UACZ,CAAC;QACL;MACJ,CAAC;IACL,CAAC;EACL;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM,uBAAuB;EAAEC;AAAyB,CAAC,GAAGpB,cAAc;AACnF,SAASA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}