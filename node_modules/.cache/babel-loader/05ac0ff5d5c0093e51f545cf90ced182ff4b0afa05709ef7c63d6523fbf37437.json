{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSubmissionDirty, usePostSubmissionMutation, useUpdateSubmissionMutation } from '../store';\nfunction useUploadSubmission() {\n  _s();\n  const user = useSelector(state => state.userData);\n  const userQuestions = useSelector(state => state.questionsData);\n  const [updateSubmission, updateResults] = useUpdateSubmissionMutation();\n  const [createSubmission, createResults] = usePostSubmissionMutation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (user.id == 0) return;\n    if (!user.startedExam) return;\n    console.log(userQuestions);\n    let answers = [];\n    const submission = {\n      id: user.id,\n      answers: answers\n    };\n    userQuestions.data.map(question => {\n      answers.push({\n        id: question.id,\n        answerId: question.userAnswerId || 0\n      });\n    });\n    if (userQuestions.isDirty) {\n      createSubmission(submission);\n      console.log(\"Created submission\");\n      dispatch(setSubmissionDirty({\n        value: false\n      }));\n    } else {\n      updateSubmission(submission);\n      console.log(\"Updated submission after mutation\");\n    }\n  }, [userQuestions]);\n}\n_s(useUploadSubmission, \"hBCG0o1UbLnaTQjnW5l5L5wYyro=\", false, function () {\n  return [useSelector, useSelector, useUpdateSubmissionMutation, usePostSubmissionMutation, useDispatch];\n});\nexport default useUploadSubmission;","map":{"version":3,"names":["useEffect","useSelector","useDispatch","setSubmissionDirty","usePostSubmissionMutation","useUpdateSubmissionMutation","useUploadSubmission","user","state","userData","userQuestions","questionsData","updateSubmission","updateResults","createSubmission","createResults","dispatch","id","startedExam","console","log","answers","submission","data","map","question","push","answerId","userAnswerId","isDirty","value"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/Hooks/useUploadSubmission.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSubmissionDirty, usePostSubmissionMutation, useUpdateSubmissionMutation } from '../store';\n\nfunction useUploadSubmission()\n{\n    const user = useSelector(state => state.userData);\n    const userQuestions = useSelector((state)=>state.questionsData);\n    const [updateSubmission, updateResults] = useUpdateSubmissionMutation();\n    const [createSubmission, createResults] = usePostSubmissionMutation();\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        if(user.id == 0) return;\n        if(!user.startedExam) return;\n\n        console.log(userQuestions);\n        let answers = [];\n        const submission = {id: user.id, answers: answers};\n        userQuestions.data.map((question) =>\n        {\n            answers.push({id: question.id, answerId: question.userAnswerId || 0});\n        })\n\n        if(userQuestions.isDirty)\n        {\n            createSubmission(submission);\n            console.log(\"Created submission\");\n            dispatch(setSubmissionDirty({value: false}));\n        }\n        else\n        {\n            updateSubmission(submission);\n            console.log(\"Updated submission after mutation\");\n        }\n        \n\n    }, [userQuestions]);\n}\n\nexport default useUploadSubmission;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,EAAEC,yBAAyB,EAAEC,2BAA2B,QAAQ,UAAU;AAErG,SAASC,mBAAmB,GAC5B;EAAA;EACI,MAAMC,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAAC;EACjD,MAAMC,aAAa,GAAGT,WAAW,CAAEO,KAAK,IAAGA,KAAK,CAACG,aAAa,CAAC;EAC/D,MAAM,CAACC,gBAAgB,EAAEC,aAAa,CAAC,GAAGR,2BAA2B,EAAE;EACvE,MAAM,CAACS,gBAAgB,EAAEC,aAAa,CAAC,GAAGX,yBAAyB,EAAE;EACrE,MAAMY,QAAQ,GAAGd,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAI;IACV,IAAGO,IAAI,CAACU,EAAE,IAAI,CAAC,EAAE;IACjB,IAAG,CAACV,IAAI,CAACW,WAAW,EAAE;IAEtBC,OAAO,CAACC,GAAG,CAACV,aAAa,CAAC;IAC1B,IAAIW,OAAO,GAAG,EAAE;IAChB,MAAMC,UAAU,GAAG;MAACL,EAAE,EAAEV,IAAI,CAACU,EAAE;MAAEI,OAAO,EAAEA;IAAO,CAAC;IAClDX,aAAa,CAACa,IAAI,CAACC,GAAG,CAAEC,QAAQ,IAChC;MACIJ,OAAO,CAACK,IAAI,CAAC;QAACT,EAAE,EAAEQ,QAAQ,CAACR,EAAE;QAAEU,QAAQ,EAAEF,QAAQ,CAACG,YAAY,IAAI;MAAC,CAAC,CAAC;IACzE,CAAC,CAAC;IAEF,IAAGlB,aAAa,CAACmB,OAAO,EACxB;MACIf,gBAAgB,CAACQ,UAAU,CAAC;MAC5BH,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjCJ,QAAQ,CAACb,kBAAkB,CAAC;QAAC2B,KAAK,EAAE;MAAK,CAAC,CAAC,CAAC;IAChD,CAAC,MAED;MACIlB,gBAAgB,CAACU,UAAU,CAAC;MAC5BH,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IACpD;EAGJ,CAAC,EAAE,CAACV,aAAa,CAAC,CAAC;AACvB;AAAC,GAlCQJ,mBAAmB;EAAA,QAEXL,WAAW,EACFA,WAAW,EACSI,2BAA2B,EAC3BD,yBAAyB,EAClDF,WAAW;AAAA;AA8BhC,eAAeI,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}