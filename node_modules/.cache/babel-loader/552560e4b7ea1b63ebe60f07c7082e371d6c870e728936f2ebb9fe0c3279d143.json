{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst submissionSlice = createSlice({\n  name: 'submissionData',\n  initialState: {\n    isDirty: true,\n    answers: [{\n      \"questionId\": 14,\n      \"answerId\": 3\n    }],\n    id: 0\n  },\n  reducers: {\n    setupSubmission(_ref, action) {\n      let {\n        state\n      } = _ref;\n      console.log(state.id);\n      state.isDirty = action.payload.isDirty;\n      state.answers = action.payload.answers;\n      state.id = action.payload.id;\n    },\n    selectAlternative(state, action) {\n      state.isDirty = true;\n      state.answers.map(answer => {\n        if (answer.questionId == action.payload.questionId) {\n          answer.answerId = action.payload.alt;\n        }\n      });\n    },\n    setSubmissionDirty(state, action) {\n      state.isDirty = action.payload.value;\n    }\n  }\n});\nexport const {\n  setupSubmission,\n  selectAlternative,\n  setSubmissionDirty\n} = submissionSlice.actions;\nexport const submissionReducer = submissionSlice.reducer;","map":{"version":3,"names":["createSlice","submissionSlice","name","initialState","isDirty","answers","id","reducers","setupSubmission","action","state","console","log","payload","selectAlternative","map","answer","questionId","answerId","alt","setSubmissionDirty","value","actions","submissionReducer","reducer"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/store/slices/submissionSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst submissionSlice = createSlice({\n    name: 'submissionData',\n    initialState:{\n        isDirty: true,\n        answers: [\n            {\n                \"questionId\": 14,\n                \"answerId\": 3\n            }\n        ],\n        id: 0\n    },\n    reducers:\n    {\n        setupSubmission({state}, action)\n        {\n            console.log(state.id);\n            state.isDirty = action.payload.isDirty;\n            state.answers = action.payload.answers;\n            state.id = action.payload.id;\n        },\n        selectAlternative(state, action)\n        {\n            state.isDirty = true;\n            state.answers.map((answer) => {\n                if(answer.questionId == action.payload.questionId)\n                {\n                    answer.answerId = action.payload.alt;\n                }\n            })\n        },\n        setSubmissionDirty(state, action)\n        {\n            state.isDirty = action.payload.value;\n        }\n    }\n});\n\nexport const { setupSubmission, selectAlternative, setSubmissionDirty } = submissionSlice.actions;\nexport const submissionReducer = submissionSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,eAAe,GAAGD,WAAW,CAAC;EAChCE,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAC;IACTC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE,CACL;MACI,YAAY,EAAE,EAAE;MAChB,UAAU,EAAE;IAChB,CAAC,CACJ;IACDC,EAAE,EAAE;EACR,CAAC;EACDC,QAAQ,EACR;IACIC,eAAe,OAAUC,MAAM,EAC/B;MAAA,IADgB;QAACC;MAAK,CAAC;MAEnBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACJ,EAAE,CAAC;MACrBI,KAAK,CAACN,OAAO,GAAGK,MAAM,CAACI,OAAO,CAACT,OAAO;MACtCM,KAAK,CAACL,OAAO,GAAGI,MAAM,CAACI,OAAO,CAACR,OAAO;MACtCK,KAAK,CAACJ,EAAE,GAAGG,MAAM,CAACI,OAAO,CAACP,EAAE;IAChC,CAAC;IACDQ,iBAAiB,CAACJ,KAAK,EAAED,MAAM,EAC/B;MACIC,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,OAAO,CAACU,GAAG,CAAEC,MAAM,IAAK;QAC1B,IAAGA,MAAM,CAACC,UAAU,IAAIR,MAAM,CAACI,OAAO,CAACI,UAAU,EACjD;UACID,MAAM,CAACE,QAAQ,GAAGT,MAAM,CAACI,OAAO,CAACM,GAAG;QACxC;MACJ,CAAC,CAAC;IACN,CAAC;IACDC,kBAAkB,CAACV,KAAK,EAAED,MAAM,EAChC;MACIC,KAAK,CAACN,OAAO,GAAGK,MAAM,CAACI,OAAO,CAACQ,KAAK;IACxC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEb,eAAe;EAAEM,iBAAiB;EAAEM;AAAmB,CAAC,GAAGnB,eAAe,CAACqB,OAAO;AACjG,OAAO,MAAMC,iBAAiB,GAAGtB,eAAe,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}