{"ast":null,"code":"var _jsxFileName = \"/Users/machadogomes/Documents/InterviewHub/question_hub/src/Components/Question.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAlternative } from \"../store\";\nimport { useEffect } from \"react\";\nimport useSelectAlternative from \"../Hooks/useSelectAlternative\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Question(_ref) {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [userAnswer, setUserAnswer] = useState(0);\n  const dispatch = useDispatch();\n  const selectAlternative = useSelectAlternative();\n  useEffect(() => {\n    if (userAnswer == 0) return;\n    selectAlternative({\n      questionId: data.id,\n      answerId: userAnswer\n    });\n  }, [userAnswer]);\n\n  // Updates the current selected answer with user onclick alternative input\n  const handleSetUserAnswer = alternative => {\n    setUserAnswer(alternative);\n  };\n  console.log(data.userAnswerId);\n  // Displays the content of the alternatives and connects to 'handleSetUserAnswer'\n  const alternativesContent = data.alternatives.map(alternative => {\n    const selectionStyle = userAnswer == alternative.id ? {\n      backgroundColor: '#282c3451'\n    } : {\n      backgroundColor: '#ffffff'\n    };\n    const content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      style: selectionStyle,\n      onClick: () => handleSetUserAnswer(alternative),\n      children: alternative.answer\n    }, alternative.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this);\n    return content;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: 15\n      },\n      children: data.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: 10\n      },\n      children: alternativesContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n}\n_s(Question, \"zNtO7hQI9Lsn3mQFhUg/XdEiiOI=\", false, function () {\n  return [useDispatch, useSelectAlternative];\n});\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["useState","useDispatch","useSelector","selectAlternative","useEffect","useSelectAlternative","Question","data","userAnswer","setUserAnswer","dispatch","questionId","id","answerId","handleSetUserAnswer","alternative","console","log","userAnswerId","alternativesContent","alternatives","map","selectionStyle","backgroundColor","content","answer","paddingLeft","question","paddingTop"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/Components/Question.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAlternative } from \"../store\";\nimport { useEffect } from \"react\";\nimport useSelectAlternative from \"../Hooks/useSelectAlternative\";\n\nfunction Question({data})\n{\n    const [userAnswer, setUserAnswer] = useState(0);\n    const dispatch = useDispatch();\n    const selectAlternative = useSelectAlternative();\n\n    useEffect(() => {\n        if(userAnswer == 0) return;\n        selectAlternative({questionId: data.id, answerId: userAnswer});\n    }, [userAnswer]);\n    \n    // Updates the current selected answer with user onclick alternative input\n    const handleSetUserAnswer = (alternative) =>\n    {\n        setUserAnswer(alternative);\n    }\n\n    console.log(data.userAnswerId);\n    // Displays the content of the alternatives and connects to 'handleSetUserAnswer'\n    const alternativesContent = data.alternatives.map((alternative) =>\n    {\n        const selectionStyle = userAnswer == alternative.id ? {backgroundColor: '#282c3451'} : {backgroundColor: '#ffffff'}\n        const content = <div \n            className=\"box\"\n            style={selectionStyle}\n            onClick={() => handleSetUserAnswer(alternative)} \n            key={alternative.id}>{alternative.answer}\n        </div>\n        return content;\n    });\n\n    return <div className=\"box\" >\n        <div style={{paddingLeft: 15}}>{data.question}</div>\n        <div style={{paddingTop: 10}}>\n            {alternativesContent}\n        </div>\n        \n    </div>\n}\n\nexport default Question;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,iBAAiB,QAAQ,UAAU;AAC5C,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,oBAAoB,MAAM,+BAA+B;AAAC;AAEjE,SAASC,QAAQ,OACjB;EAAA;EAAA,IADkB;IAACC;EAAI,CAAC;EAEpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAMU,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAME,iBAAiB,GAAGE,oBAAoB,EAAE;EAEhDD,SAAS,CAAC,MAAM;IACZ,IAAGI,UAAU,IAAI,CAAC,EAAE;IACpBL,iBAAiB,CAAC;MAACQ,UAAU,EAAEJ,IAAI,CAACK,EAAE;MAAEC,QAAQ,EAAEL;IAAU,CAAC,CAAC;EAClE,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMM,mBAAmB,GAAIC,WAAW,IACxC;IACIN,aAAa,CAACM,WAAW,CAAC;EAC9B,CAAC;EAEDC,OAAO,CAACC,GAAG,CAACV,IAAI,CAACW,YAAY,CAAC;EAC9B;EACA,MAAMC,mBAAmB,GAAGZ,IAAI,CAACa,YAAY,CAACC,GAAG,CAAEN,WAAW,IAC9D;IACI,MAAMO,cAAc,GAAGd,UAAU,IAAIO,WAAW,CAACH,EAAE,GAAG;MAACW,eAAe,EAAE;IAAW,CAAC,GAAG;MAACA,eAAe,EAAE;IAAS,CAAC;IACnH,MAAMC,OAAO,gBAAG;MACZ,SAAS,EAAC,KAAK;MACf,KAAK,EAAEF,cAAe;MACtB,OAAO,EAAE,MAAMR,mBAAmB,CAACC,WAAW,CAAE;MAAA,UAC1BA,WAAW,CAACU;IAAM,GAAnCV,WAAW,CAACH,EAAE;MAAA;MAAA;MAAA;IAAA,QACjB;IACN,OAAOY,OAAO;EAClB,CAAC,CAAC;EAEF,oBAAO;IAAK,SAAS,EAAC,KAAK;IAAA,wBACvB;MAAK,KAAK,EAAE;QAACE,WAAW,EAAE;MAAE,CAAE;MAAA,UAAEnB,IAAI,CAACoB;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAO,eACpD;MAAK,KAAK,EAAE;QAACC,UAAU,EAAE;MAAE,CAAE;MAAA,UACxBT;IAAmB;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AACV;AAAC,GAtCQb,QAAQ;EAAA,QAGIL,WAAW,EACFI,oBAAoB;AAAA;AAAA,KAJzCC,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}