{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { navigationReducer, loadPath, changePath } from './slices/navigationSlice';\nimport { loginReducer, changeLoginInput } from './slices/loginSlice';\nimport { setupListeners } from '@reduxjs/toolkit/query/react';\nimport { textsApi } from './apis/textsApi';\nimport { questionsApi } from './apis/questionsApi';\nconst store = configureStore({\n  reducer: {\n    navigation: navigationReducer,\n    login: loginReducer,\n    [textsApi.reducerPath]: textsApi.reducer,\n    [questionsApi.reducerPath]: questionsApi.reducer\n  },\n  middleware: getDefaultMiddleware => {\n    return getDefaultMiddleware().concat(textsApi.middleware).concat(questionsApi.middleware);\n  }\n});\nsetupListeners(store.dispatch);\nconst LOGIN_PAGE_PATH = \"/applicantLogin\";\nconst CONFIRM_PAGE_PATH = \"/confirmExam\";\nconst QUESTIONS_PAGE_PATH = \"/examQuestions\";\nconst SUBMIT_PAGE_PATH = \"/examSubmit\";\nexport { LOGIN_PAGE_PATH, CONFIRM_PAGE_PATH, QUESTIONS_PAGE_PATH, SUBMIT_PAGE_PATH };\nexport { loadPath, changePath, changeLoginInput, store };\nexport { useFetchTextQuery } from './apis/textsApi';\nexport { useFetchQuestionsQuery } from './apis/questionsApi';\nexport { useFetchUserQuery } from './apis/userApi';","map":{"version":3,"names":["configureStore","navigationReducer","loadPath","changePath","loginReducer","changeLoginInput","setupListeners","textsApi","questionsApi","store","reducer","navigation","login","reducerPath","middleware","getDefaultMiddleware","concat","dispatch","LOGIN_PAGE_PATH","CONFIRM_PAGE_PATH","QUESTIONS_PAGE_PATH","SUBMIT_PAGE_PATH","useFetchTextQuery","useFetchQuestionsQuery","useFetchUserQuery"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { navigationReducer, loadPath, changePath } from './slices/navigationSlice';\nimport { loginReducer, changeLoginInput } from './slices/loginSlice';\nimport { setupListeners } from '@reduxjs/toolkit/query/react';\nimport { textsApi } from './apis/textsApi';\nimport { questionsApi } from './apis/questionsApi';\n\nconst store = configureStore(\n{\n    reducer: {\n        navigation: navigationReducer,\n        login: loginReducer,\n        [textsApi.reducerPath]: textsApi.reducer,\n        [questionsApi.reducerPath]: questionsApi.reducer\n    },\n    middleware: (getDefaultMiddleware) =>{\n        return getDefaultMiddleware()\n            .concat(textsApi.middleware)\n            .concat(questionsApi.middleware);\n    }\n\n});\n\nsetupListeners(store.dispatch);\n\nconst LOGIN_PAGE_PATH = \"/applicantLogin\";\nconst CONFIRM_PAGE_PATH = \"/confirmExam\";\nconst QUESTIONS_PAGE_PATH = \"/examQuestions\";\nconst SUBMIT_PAGE_PATH = \"/examSubmit\";\n\nexport { LOGIN_PAGE_PATH, CONFIRM_PAGE_PATH, QUESTIONS_PAGE_PATH, SUBMIT_PAGE_PATH }\nexport { loadPath, changePath,  changeLoginInput, store };\nexport { useFetchTextQuery } from './apis/textsApi';\nexport { useFetchQuestionsQuery } from './apis/questionsApi';\nexport { useFetchUserQuery } from './apis/userApi';"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,iBAAiB,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,0BAA0B;AAClF,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,qBAAqB;AACpE,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,YAAY,QAAQ,qBAAqB;AAElD,MAAMC,KAAK,GAAGT,cAAc,CAC5B;EACIU,OAAO,EAAE;IACLC,UAAU,EAAEV,iBAAiB;IAC7BW,KAAK,EAAER,YAAY;IACnB,CAACG,QAAQ,CAACM,WAAW,GAAGN,QAAQ,CAACG,OAAO;IACxC,CAACF,YAAY,CAACK,WAAW,GAAGL,YAAY,CAACE;EAC7C,CAAC;EACDI,UAAU,EAAGC,oBAAoB,IAAI;IACjC,OAAOA,oBAAoB,EAAE,CACxBC,MAAM,CAACT,QAAQ,CAACO,UAAU,CAAC,CAC3BE,MAAM,CAACR,YAAY,CAACM,UAAU,CAAC;EACxC;AAEJ,CAAC,CAAC;AAEFR,cAAc,CAACG,KAAK,CAACQ,QAAQ,CAAC;AAE9B,MAAMC,eAAe,GAAG,iBAAiB;AACzC,MAAMC,iBAAiB,GAAG,cAAc;AACxC,MAAMC,mBAAmB,GAAG,gBAAgB;AAC5C,MAAMC,gBAAgB,GAAG,aAAa;AAEtC,SAASH,eAAe,EAAEC,iBAAiB,EAAEC,mBAAmB,EAAEC,gBAAgB;AAClF,SAASnB,QAAQ,EAAEC,UAAU,EAAGE,gBAAgB,EAAEI,KAAK;AACvD,SAASa,iBAAiB,QAAQ,iBAAiB;AACnD,SAASC,sBAAsB,QAAQ,qBAAqB;AAC5D,SAASC,iBAAiB,QAAQ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}