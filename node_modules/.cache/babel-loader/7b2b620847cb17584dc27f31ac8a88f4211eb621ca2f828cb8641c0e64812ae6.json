{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { changeUser } from \"../store\";\nimport { useLazyFetchUserQuery } from \"../store\";\nimport TryLoadUserQuestions from '../Hooks/TryLoadUserQuestions';\nfunction TryUserLogin() {\n  _s();\n  const dispatch = useDispatch();\n  const [loginInput, setLoginInput] = useState('');\n  const [fetchUser, results] = useLazyFetchUserQuery();\n  const user = useSelector(state => state.userData);\n\n  // Dispatch loaded user data\n  useEffect(() => {\n    if (user.id != 0) return; // this means user is already logged\n    if (loginInput == '') return;\n    if (!results.isSuccess || results.isUninitialized || results.isFetching) return;\n    if (results.data.length <= 0) {\n      return;\n    }\n    dispatch(changeUser(results.data[0]));\n    console.log(`login validated, user dispatched`);\n    console.log(results.data[0]);\n  }, [user, loginInput, results]);\n  return [loginInput => {\n    setLoginInput(loginInput);\n    fetchUser(loginInput);\n  }, results];\n}\n_s(TryUserLogin, \"WyUP1c3ErAlCdcUi97dUS0wUz30=\", false, function () {\n  return [useDispatch, useLazyFetchUserQuery, useSelector];\n});\n_c = TryUserLogin;\nexport default TryUserLogin;\nvar _c;\n$RefreshReg$(_c, \"TryUserLogin\");","map":{"version":3,"names":["useDispatch","useSelector","useEffect","useState","changeUser","useLazyFetchUserQuery","TryLoadUserQuestions","TryUserLogin","dispatch","loginInput","setLoginInput","fetchUser","results","user","state","userData","id","isSuccess","isUninitialized","isFetching","data","length","console","log"],"sources":["/Users/machadogomes/Documents/InterviewHub/question_hub/src/Hooks/TryUserLogin.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { changeUser } from \"../store\";\nimport { \n    useLazyFetchUserQuery\n} from \"../store\";\nimport TryLoadUserQuestions from '../Hooks/TryLoadUserQuestions';\n\nfunction TryUserLogin()\n{\n    const dispatch = useDispatch();\n    const [loginInput, setLoginInput] = useState('');\n    const [fetchUser, results] = useLazyFetchUserQuery();\n    const user = useSelector(state=>state.userData);\n    \n    // Dispatch loaded user data\n    useEffect(() => {\n        if(user.id != 0) return; // this means user is already logged\n        if(loginInput == '') return;\n        if(!results.isSuccess ||  \n            results.isUninitialized || \n            results.isFetching) return;\n        \n        if(results.data.length <= 0){\n            return;\n        }\n\n        dispatch(changeUser(results.data[0]));\n        console.log(`login validated, user dispatched`);\n        console.log(results.data[0]);\n\n    }, [user, loginInput, results])\n\n    return [(loginInput) => {\n        setLoginInput(loginInput);\n        fetchUser(loginInput);\n    }, results];\n}\n\nexport default TryUserLogin;"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,UAAU;AACrC,SACIC,qBAAqB,QAClB,UAAU;AACjB,OAAOC,oBAAoB,MAAM,+BAA+B;AAEhE,SAASC,YAAY,GACrB;EAAA;EACI,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,SAAS,EAAEC,OAAO,CAAC,GAAGP,qBAAqB,EAAE;EACpD,MAAMQ,IAAI,GAAGZ,WAAW,CAACa,KAAK,IAAEA,KAAK,CAACC,QAAQ,CAAC;;EAE/C;EACAb,SAAS,CAAC,MAAM;IACZ,IAAGW,IAAI,CAACG,EAAE,IAAI,CAAC,EAAE,OAAO,CAAC;IACzB,IAAGP,UAAU,IAAI,EAAE,EAAE;IACrB,IAAG,CAACG,OAAO,CAACK,SAAS,IACjBL,OAAO,CAACM,eAAe,IACvBN,OAAO,CAACO,UAAU,EAAE;IAExB,IAAGP,OAAO,CAACQ,IAAI,CAACC,MAAM,IAAI,CAAC,EAAC;MACxB;IACJ;IAEAb,QAAQ,CAACJ,UAAU,CAACQ,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACrCE,OAAO,CAACC,GAAG,CAAE,kCAAiC,CAAC;IAC/CD,OAAO,CAACC,GAAG,CAACX,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;EAEhC,CAAC,EAAE,CAACP,IAAI,EAAEJ,UAAU,EAAEG,OAAO,CAAC,CAAC;EAE/B,OAAO,CAAEH,UAAU,IAAK;IACpBC,aAAa,CAACD,UAAU,CAAC;IACzBE,SAAS,CAACF,UAAU,CAAC;EACzB,CAAC,EAAEG,OAAO,CAAC;AACf;AAAC,GA7BQL,YAAY;EAAA,QAEAP,WAAW,EAECK,qBAAqB,EACrCJ,WAAW;AAAA;AAAA,KALnBM,YAAY;AA+BrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}